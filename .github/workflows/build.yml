name: build

on:
  push:
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  build:
    permissions:
      contents: read

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - run: |
          export WASI_VERSION=24
          export WASI_VERSION_FULL=${WASI_VERSION}.0
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-x86_64-linux.tar.gz
          tar xvf wasi-sdk-${WASI_VERSION_FULL}-x86_64-linux.tar.gz
          export WASI_SDK_PATH=$(pwd)/wasi-sdk-${WASI_VERSION_FULL}-x86_64-linux

          export CC="${WASI_SDK_PATH}/bin/clang --sysroot=${WASI_SDK_PATH}/share/wasi-sysroot"
          export AR="${WASI_SDK_PATH}/bin/llvm-ar"
          export RANLIB="${WASI_SDK_PATH}/bin/llvm-ranlib"

          patch -d openssl -p1 <openssl.patch
          (cd openssl && ./Configure wasm32-wasi no-dgram no-quic no-tests no-ui-console no-sock no-posix-io)
          (cd openssl && make -j$(nproc))
          cp openssl/apps/openssl web/src/assets/openssl.wasm
          (cd web && npm ci && npm run build)

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' }}

    permissions:
      actions: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
